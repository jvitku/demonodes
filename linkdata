#!/bin/sh
# 
# author Jaroslav Vitku [vitkujar@fel.cvut.cz]
#
# This script helps you to symlink all files needed for GUI representation of nodes into the nengo project.
# 
# For more information, see README.md.
#
# Args parsing based on: http://stackoverflow.com/questions/192249/how-do-i-parse-command-line-arguments-in-bash

usage()
{

    echo "\nThis script helps to deploy GUI representation of your nodes into the Nengo application. "
    echo "For mode information, see README.md. Usage:\n"
    echo "-l [../relativePathFromHereTo/YourProjectFolder] - this symlinks all GUI data to the Nengo simulator."
	echo "-c [../relativePathFromHereTo/YourProjectFolder] - does the same, but COPIES it instead of linking - for Ubuntu!"
    echo "-f 						 - force overwrite existing links/files. Files to be linked:\n"
    echo "RosNode helper scripts from:		[YourProjectFolder]/python/rosnodes/*\n"
    echo "Drag&Drop GUI images from: 	[YourProjectFolder]/images/nengoIcons/*"
    echo "Drag&drop scripts from: 	[YourProjectFolder]/python/nef/templates/*"
    echo "Other scripts from: 		[YourProjectFolder]/python/scripts/*"
    echo "Nengoros demo scripts from:	[YourProjectFolder]/python/nr-demo/*\n"
	echo "Note1: if you linked some new data into the GUI, you have to manually import them"
	echo " in the file named: nengoros/nengo/simulator-ui/python/nef/templates/_init__.py\n"
	echo "Note2: Current version of Gradle is unable to follow symlinks on Ubuntu,"
	echo " in case of using Ubuntu, use the -c flag in order to be able to run \"./gradlew installApp\" in smulator-ui/\n"
}


##################################################### Parse command line

BASE="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )" # we are here

C=0             # Deploy Project
F=0				# force overwrite existing links/files??
L=0

OPTIND=1        # Reset in case getopts has been used previously in the shell.
while getopts "flch?help:" opt; do
    case "$opt" in
        h|\?|help)
        usage
        exit 0
        ;;
        l)
        L=1
        ;;
		c)
		C=1
		;;
        f)
        F=1
        ;;
    esac
done

shift $((OPTIND-1))
[ "$1" = "--" ] && shift

##################################################### Do it

TEMP="python/nef/templates"
ICONS="images/nengoIcons"
SCR="python/scripts"
DEMO="python/nr-demo"
SIM="nengo/simulator-ui"
RN="python/rosnodes"



if [ $C = "1" ] && [ $L = "1" ]; then
	echo "\nERROR: cannot link and copy data at the same time, choose one, usage:"
	usage
	exit
fi

# determine the command
if [ $C = "1" ]; then
	echo "COPYING files"
	COMMAND=cp
elif [ $L = "1" ]; then
	echo "LINKING files"
	COMMAND=ln
else
	echo "\nERROR: choose one of these flags: -c [copy] -l [link]"
	usage
	exit
fi

# force rewrite files without warning??
if [ $F = "1" ]; then
	if [ $C = "1" ]; then
		FLAG="-f"	# man cp
	else
    	FLAG="-sF"
	fi
else
	if [ $C = "1" ]; then
		FLAG=""		
	else
    	FLAG="-si"
	fi
fi



# deploy project data
if [ $C = "1" ] || [ $L = "1" ]; then

    # if no. of args is not 1 or the first arg is not folder, exit
    if [ "$#" -ne 1 ] || ! [ -d "$BASE/$1" ]; then
        usage
        exit 0
    fi
    PROJ=$(basename "$1")	# get name of the project
    #echo $(basename $(dirname "$1"))


    # ros nodes
    if [ -d "$BASE/$1/$RN" ]; then
        if [ "$(ls $BASE/$1/$RN)" == "" ]; then
            echo "\n** The directory: $BASE/$1/$RN/ does not contain any files, SKIPPING!\n"
        else
            echo "\n** Deploying scripts from: $BASE/$1/$RN/ to $SIM/$RN\n"
            mkdir -p ../nengo/simulator-ui/$RN
            $COMMAND $FLAG $BASE/$1/$RN/* ../$SIM/$RN
        fi
    else
        echo "\n** The directory: $BASE/$1/$RN/ does not exist, SKIPPING!\n"
    fi

    # GUI icons
    if [ -d "$BASE/$1/$ICONS" ]; then
        if [ "$(ls $BASE/$1/$ICONS)" == "" ]; then
            echo "\n** The directory: $BASE/$1/$ICONS/ does not contain any files, SKIPPING!\n"
        else
            echo "\n** Deploying icons from: $BASE/$1/$ICONS to $SIM/$ICONS\n"
            $COMMAND $FLAG $BASE/$1/$ICONS/* ../$SIM/$ICONS
        fi
    else
        echo "\n** The directory: $BASE/$1/$ICONS does not exist, SKIPPING!\n"
    fi

    # nengo GUI templates 
    if [ -d "$BASE/$1/$TEMP" ]; then
        if [ "$(ls $BASE/$1/$TEMP)" == "" ]; then
            echo "\n** The directory: $BASE/$1/$TEMP/ does not contain any files, SKIPPING!\n"
        else
            echo "\n** Deploying GUI templates from: $BASE/$1/$TEMP to $SIM/$TEMP\n"
            $COMMAND $FLAG $BASE/$1/$TEMP/* ../$SIM/$TEMP
        fi
    else
        echo "\n** The directory: $BASE/$1/$TEMP does not exist, SKIPPING!\n"
    fi

    # demo scripts
    if [ -d "$BASE/$1/$DEMO" ]; then
        if [ "$(ls $BASE/$1/$DEMO)" == "" ]; then
            echo "\n** The directory: $BASE/$1/$DEMO/ does not contain any files, SKIPPING!\n"
        else
            echo "\n** Deploying scripts from: $BASE/$1/$DEMO/ to $SIM/$DEMO/$PROJ/\n"
            mkdir -p ../nengo/simulator-ui/nr-demo/$PROJ
            $COMMAND $FLAG $BASE/$1/$DEMO/* ../$SIM/nr-demo/$PROJ
        fi
    else
        echo "\n** The directory: $BASE/$1/$DEMO/ does not exist, SKIPPING!\n"
    fi

    # general scripts
    if [ -d "$BASE/$1/$SCR" ]; then
        if [ "$(ls $BASE/$1/$SCR)" == "" ]; then
            echo "\n** The directory: $BASE/$1/$SCR/ does not contain any files, SKIPPING!\n"
        else
            echo "\n** Deploying scripts from: $BASE/$1/$SCR/ to $SIM/scripts/$PROJ/\n"
            mkdir -p ../nengo/simulator-ui/scripts/$PROJ
            $COMMAND $FLAG $BASE/$1/$SCR/* ../$SIM/scripts/$PROJ
        fi
    else
        echo "\n** The directory: $BASE/$1/$SCR/ does not exist, SKIPPING!\n"
    fi
    echo "\nAll done\n"
else
    usage
fi

