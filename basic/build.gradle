// author Jaroslav Vitku
// 
/*
//thi sis handled in the super-project nengoros
task wrapper(type: Wrapper) {
gradleVersion      = '1.7'
}
sourceCompatibility = 1.6
targetCompatibility = 1.6
*/

// java support for gradle [no command]
apply plugin: 'java'
// Create the Java (jar) library from this project. [./gradlew install]
apply plugin: 'maven'
// create the Eclipse project [./gradlew eclipse]
apply plugin: 'eclipse'
// Create the runnable application from this project into build/lib/bin.. ? [./gradlew installApp]
apply plugin: 'application'
mainClassName = 'org.ros.RosRun'

// This configures the project to search for Maven libraries (rosjava: bootstrap.. and their dependencies)
repositories {
    mavenLocal()

    mavenCentral()

    maven {
        url 'http://robotbrains.hideho.org/nexus/content/groups/ros-public'
        //		url 'http://repo1.maven.org/maven2/'
    }

}

// Define the version and name of my stack (ROS convention)
version             = '0.0.2-SNAPSHOT'
group               = 'org.hanns.demonodes'

// This project depends on compilation of rosjava_core
dependencies {
    compile 'ros.rosjava_core:rosjava:0.0.0-SNAPSHOT'
    testCompile 'junit:junit:4.10'
    // the difference: in order to clean build this project as standalone, the maven repo should be used
    // if the depedency is not found, ./gradlew install (jroscore)
    compile 'ctu.nengoros:jroscore:0.0.2-SNAPSHOT' 
    testCompile 'ctu.nengoros:jroscore:0.0.2-SNAPSHOT' 

    compile 'ctu.nengoros:jrosparam:0.0.2-SNAPSHOT'
    testCompile 'ctu.nengoros:jrosparam:0.0.2-SNAPSHOT'

    // in order to link this to source of jroscore in multiproject nengoros, this should be used
    //testCompile project('jroscore')
    //compile project('jroscore')
	//compile project('jrosparam')
	//testCompile project('jrosparam')
}

